# genldif.py

'''
Generates two ldif files.
One with a list of user accounts.
The other with group information.
It was written for ApacheDS
The names were randomly generated by AI or some other site
'''

# Setup output files:
# clean up old ones if they exist
import os
if os.path.exists("groups.ldif"):
    os.remove("groups.ldif")
if os.path.exists("users.ldif"):
    os.remove("users.ldif")

# The variables:
basedn = "dc=my,dc=base,dc=dn"
password = "password"
ldifusers = []
ldifgroups = []


# Tupple of names:
userNames = (("Brendan", "Canty"),("Olivia", "Smith"),("Liam", "Johnson"),("Samuel", "Harris")
            ("Mia", "Brown"),("Noah", "Davis"),("Sophia", "Garcia"),("Lucas", "Rodriguez"),
            ("Ava", "Martinez"),("Matthew", "Taylor"),("Emily", "Wilson"),("Caleb", "White"),
            ("Amelia", "Harris"),("Elijah", "Clark"),("Scarlett", "Thomas"),("Benjamin", "Jackson"),
            ("Grace", "Thompson"),("Sebastian", "Walker"),("Isabella", "Scott"),("Jackson", "Young"),
            ("Aria", "Hall"),("Dylan", "Anderson"),("Harper", "Torres"),("Jaxon", "Wright"),
            ("Violet", "Lee"))

# Generates the ldif data:
def generateLdif(firstname, lastname, fnln):
# Formatted this way to to make proper ldif output.
# This is also the place to edit for different LDAP servers.
     ldif = '''\
dn: uid={fnln},ou=users,{basedn}
givenName: {firstname} {lastname}
sn: {lastname}
objectClass: person
objectClass: organizationalPerson
objectClass: inetorgperson
uid: {fnln}
userPassword: {password}
cn: {firstname} {lastname}
   '''.format(firstname=firstname, lastname=lastname, fnln=fnln, basedn=basedn, password=password)
     return ldif

# Readies User entries for printing\saving:
for i in range(len(userNames)):
    SplitName = userNames[i]
    (firstname, lastname) = SplitName
    fnln=firstname.lower() + "." + lastname.lower()
    ldifusers.insert(i, generateLdif(firstname, lastname, fnln))
    ldifgroups.insert(i, "uid=" + fnln + basedn)
# Prints/saves User entries
for i in range(len(ldifusers)):
    print(ldifusers[i])
    f = open("users.ldif", "a")
    f.write(ldifusers[i])
    f.close()
# Prints/saves long UID for use with groups.
for i in range(len(ldifgroups)):
    print(ldifgroups[i])
    f = open("groups.ldif", "a")
    f.write(ldifgroups[i] + "\n")
    f.close()
